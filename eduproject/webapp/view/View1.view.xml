<mvc:View controllerName="eduproject.controller.View1"
    xmlns:mvc="sap.ui.core.mvc" displayBlock="true" xmlns:core="sap.ui.core" 
    xmlns="sap.m" xmlns:t="sap.ui.table">
    <Page id="page1" title="{i18n>title}">
        <content>
            <Panel expanded="true" expandable="true" headerText="검색조건" width="auto" class="sapUiResponsiveMargin">
                <HBox >
                    <VBox width="25%" class="sapUiMediumMarginEnd">
                        <Label text="name" required="true" />
                        <Input type="Text" value="{/condition/name}" width="100%"></Input>
                    </VBox>
                    <VBox width="25%" class="sapUiMediumMarginEnd">
                        <Label text="Department" required="true" />
                        <Input type="Text" value="{/condition/department}" width="100%"></Input>
                    </VBox>
                    <VBox width="25%" class="sapUiMediumMarginEnd">
                        <Label text="Grade" required="false" />
                        <Select width="100%" selectedKey="{/condition/grade}" change="onChangeGrade"
                             items="{path : '/gradeList', templateShareable:true}">
                            <!--얘는 core라서 위에 xmlns:core="sap.ui.core" 이거 추가해줘야한다.-->
                            <items>
                                <core:Item key="{code}" text="{text}"/>
                            </items>
                        </Select>   
                    </VBox>
                    <VBox width="25%" class="sapUiMediumMarginEnd">
                        <Label text="" required="false"/> <!--줄 맞추기용-->
                        <HBox >
                            <Button type="Accept" text="Search" icon="sap-icon://search" press="onSearch" class="sapUiTinyMarginEnd"/>
                            <Button type="Emphasized" text="Help" tooltip="Show Help Message !!!" press="onHelp" icon="sap-icon://sys-help"/>
                        </HBox>
                    </VBox>
                </HBox>
            </Panel>
            <Panel expanded="false" expandable="false" headerText="검색결과" width="auto" class="sapUiResponsiveMargin">
                <headerToolbar>
                    <OverflowToolbar style="Clear">
                        <core:Icon src="sap-icon://table-view" color="blue" size="1.5rem"/>
                        <!-- resultCount 검색 건수를 JSON을 이용해서 뿌려줄 것이다. 추후 controller 구현-->
                        <Label text="Result" design="Bold"></Label>
                    </OverflowToolbar>
                </headerToolbar>
                <t:Table selectionMode="None" 
                    rowMode="Fixed" 
                    noData ="Nothing Data..." 
                    rows="{/resultList}"
                    enableCellFilter="true" 
                    alternateRowColors="true"
                    enableColumnFreeze="true" >
                    <t:columns>
                    <!-- sortProperty를 통해서 sort할 column을 정할 수 있다. 문법이 특이함. 얘는 그냥 {}없이 firstName이 들어가네 -->
                        <!-- multiLabel 활용해보기 -->
                        <!-- headerSpan을 사용해야지 위에 컬럼이 합쳐져서 보이게된다.-->
                        <t:Column width="20%" hAlign="Center" sortProperty="firstName" filterProperty="firstName" headerSpan="2"> 
                            <t:multiLabels>
                                <Label text="Name" textAlign="Center" width="100%"/>
                                <Label text="First Name"/>
                            </t:multiLabels>
                            <t:template>
                                <Text text="{firstName}"/>
                            </t:template>
                        </t:Column>
                        <t:Column width="20%" hAlign="Center" sortProperty="firstName" filterProperty="firstName" headerSpan="2"> 
                            <t:multiLabels>
                                <Label text="Name" textAlign="Center" width="100%"/>
                                <Label text="Last Name"/>
                            </t:multiLabels>
                            <t:template>
                                <Text text="{lastName}"/>
                            </t:template>
                        </t:Column>
                        <!-- 바인딩 된 데이터를 이렇게 활용할 수도 있다. -->
                        <t:Column >
                            <Label text="Display Name"/>
                            <t:template>
                                <!-- <Text text="{lastName}{firstName}"/> -->
                                <Text text="{
                                    parts: [{path: 'lastName'},{path:'firstName'}],
                                    formatter: '.NameFormat'
                                    }"/>
                            </t:template>
                        </t:Column>
                        <t:Column>
                            <Label text="Department"/>
                            <t:template>
                                <Text text="{department}" />
                            </t:template>
                        </t:Column>
                        <t:Column>
                            <Label text="Grade"/>
                            <t:template>
                                <Text text="{grade}" />
                            </t:template>
                        </t:Column>
                        <t:Column>
                            <Label text="Action"/>
                            <t:template>
                                <Button icon="sap-icon://delete" type="Transparent" press="onDelete"/>
                            </t:template>
                        </t:Column>
                    </t:columns>
                </t:Table>
            </Panel>
        </content>
        <footer>
            <OverflowToolbar>
				<ToolbarSpacer/>
				<Button text="Accept" type="Accept" press="gotoView2" />
				<Button text="Reject" type="Reject" />
				<Button text="Edit" />
				<Button text="Delete" icon="sap-icon://clear-all" type="Critical"/>
   				<ToolbarSpacer width="100px"/>
			</OverflowToolbar>
        </footer>
    </Page>
</mvc:View>
